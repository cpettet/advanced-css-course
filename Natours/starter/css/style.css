/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  /* Reset so CSS box-model behaves as-expected. */
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  /* Better to put font here as it will be inherited. */
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 16px;
  /* Amount of space above and below an inline element. 1.7x larger than the font-size. */
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  /* Needs to be relative so logo-box can attach to it. */
  position: relative;

  /* Height should be 95% of the viewport. */
  height: 95vh;
  background-image:
    linear-gradient(
      to right bottom,
      rgba(128, 214, 113, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg
  );
  /* Whatever the image size, it'll try to fit the element. */
  background-size: cover;
  /* The top of the image stays the same, never cropped when viewport changes. */
  background-position: top;
  /* Specifies a polygon at which all inside will be visible. */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  /* 50% of height and width of parent element. */
  top: 40%;
  left: 50%;
  /* Shifts the top, left corner to the middle. In relation to element itself. */
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /* Determines if the backface of an element is visible/hidden during transforms. */
  /* Seems to fix shakiness of animation elements. */
  backface-visibility: hidden;
  margin-bottom: 60px;
}

.heading-primary-main {
  /* Normally, spans are in-line. */
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;

  /* Some interesting animation props */
  /* animation-delay: 3s; */
  /* animation-iteration-count: 3; */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

@keyframes moveInLeft {
  /* Starting frame of animation */
  0% {
    opacity: 0;
    transform: translateX(-100px) /* rotate(0deg) */;
  }

  /*
  60% {
    transform: rotate(90deg);
  }
  */

  80% {
    transform: translateX(10px);
  }

  /* Finishing frame of animation */
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {

  /* Starting frame of animation */
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  /* Finishing frame of animation */
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  /* Starting frame of animation */
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  /* Finishing frame of animation */
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* :link is a pseudo-class to style under special conditions */
/* Not setting :visited will use default styling (purple link) */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  /* x-shadow y-shadow blurriness shadow-color */
  box-shadow: 0 10px 20px rgba(0,0,0,0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0,0,0,0.2);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

/* :after adds a virtual element after selecting an element */
.btn::after {
  /* content is essential, even if empty */
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  /* put element behind */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn-white::after {
  background-color: #fff;
}

/* an after pseudo-element on a hover state */
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* Apply styles of the 0% for the start */
  animation-fill-mode: backwards;
}
